1.   올림(절상) 함수에 대해서 적고 설명하세요. 
1-2. 반올림 함수에 대해서 적고 설명하세요. 
1-3. 내림(절삭) 함수에 대해서 적고 설명하세요. 

1-4. 나머지 함수:
1-5. 절대값 함수:
1-6. SIGN() 함수에 대해서 설명하세요.
1-7. ASCII()
1-8. GREATEST()/LEAST()
1-9. LENGTH()
1-10. UPPER()/LOWER()/INITCAP()
1-11. INSTR()
1-12. SUBSTR()
1-13. NULLIF()
1-14. COALESCE()
1-15. LAST_DAY()
1-16. MONTHS_BETWEEN(()
1-17. NEXT_DAY()
1-18. ADD_MONTHS()

2.emp 테이블에서 급여와 평균급여를 구하고
   각 사원의 급여-평균급여를 소수점 3자리에서 올림,반올림,내림해서 아래와 
   같이 조회하는 쿼리를 작성하세요.
   
ENAME             PAY    AVG_PAY       차 올림      차 반올림       차 내림
---------- ---------- ---------- ---------- ---------- ----------
SMITH             800    2260.42   -1460.41   -1460.42   -1460.41
ALLEN            1900    2260.42    -360.41    -360.42    -360.41
WARD             1750    2260.42    -510.41    -510.42    -510.41
JONES            2975    2260.42     714.59     714.58     714.58
MARTIN           2650    2260.42     389.59     389.58     389.58
BLAKE            2850    2260.42     589.59     589.58     589.58
CLARK            2450    2260.42     189.59     189.58     189.58
KING             5000    2260.42    2739.59    2739.58    2739.58
TURNER           1500    2260.42    -760.41    -760.42    -760.41
JAMES             950    2260.42   -1310.41   -1310.42   -1310.41
FORD             3000    2260.42     739.59     739.58     739.58

ENAME             PAY    AVG_PAY       차 올림      차 반올림       차 내림
---------- ---------- ---------- ---------- ---------- ----------
MILLER           1300    2260.42    -960.41    -960.42    -960.41

-- [2]
-- ㄱ.
-- ORA-00937: not a single-group group function
SELECT ename, sal+NVL(comm,0) pay
      , ( SELECT   AVG(sal+NVL(comm,0)) FROM emp ) avg_pay
FROM emp;
-- ㄴ. 
SELECT   SUM(sal+NVL(comm,0))/COUNT(*) avg_pay
       , AVG(sal+NVL(comm,0)) avg_pay
FROM emp;
-- ㄷ.
WITH temp AS (
             SELECT ename, sal+NVL(comm,0) pay
                  , ( SELECT   AVG(sal+NVL(comm,0)) FROM emp ) avg_pay
             FROM emp
        )
SELECT  ename, pay, ROUND( avg_pay, 2 ) avg_pay 
     ,  CEIL( ( t.pay - t.avg_pay )*100 )/100 "차 올림"
     ,  ROUND( t.pay - t.avg_pay, 2 ) "차 반올림"
     ,  TRUNC( t.pay - t.avg_pay, 2) " 차 내림"
FROM temp t; 

2-2. emp 테이블에서 급여와 평균급여를 구하고
    각 사원의 급여가 평균급여 보다 많으면 "많다"
                   평균급여 보다 적으면 "적다"라고 출력
-- ㄱ. SET 집합 연산자( UNION, UNION ALL )
SELECT t.ename, t.pay, t.avg_pay, '많다' "평가"
FROM (
        SELECT ename, sal+NVL(comm,0) pay
                    , ( SELECT   AVG(sal+NVL(comm,0)) FROM emp ) avg_pay
        FROM emp 
    ) t
WHERE pay > avg_pay 
UNION ALL
SELECT t.ename, t.pay, t.avg_pay, '적다' "평가"
FROM (
        SELECT ename, sal+NVL(comm,0) pay
                    , ( SELECT   AVG(sal+NVL(comm,0)) FROM emp ) avg_pay
        FROM emp 
    ) t
WHERE pay < avg_pay ;
-- ㄴ. 
SELECT t.ename, t.pay, t.avg_pay
--     , t.pay - t.avg_pay
--     , SIGN( t.pay - t.avg_pay ) 
     , REPLACE( REPLACE( SIGN( t.pay - t.avg_pay ) , -1, '적다'), 1, '많다') "평가"
FROM (
        SELECT ename, sal+NVL(comm,0) pay
                    , ( SELECT   AVG(sal+NVL(comm,0)) FROM emp ) avg_pay
--                    , SIGN( t.pay - t.avg_pay )  s
        FROM emp 
    ) t;

3. insa 테이블에서 남자사원수, 여자사원수를 출력 
[ 실행결과 ]
 성별        사원수
남자사원수	31
여자사원수	29

SELECT name, ssn
      , MOD( SUBSTR(ssn, 8, 1 ), 2 ) gender -- 1 남자, 0 여자
FROM insa;
-- ㄴ.
SELECT 
  REPLACE( REPLACE( MOD( SUBSTR(ssn, 8, 1 ), 2 ), 0, '여자'), 1, '남자') || '사원수' "성별"
  , COUNT(*) "사원수"
FROM insa
GROUP BY MOD( SUBSTR(ssn, 8, 1 ), 2 );
-- ㄱ.
SELECT '남자사원수' "성별", COUNT(*) "사원수"
FROM insa
WHERE MOD( SUBSTR(ssn, 8, 1 ), 2 ) = 1
UNION ALL
SELECT '여자사원수' "성별", COUNT(*) "사원수"
FROM insa
WHERE MOD( SUBSTR(ssn, 8, 1 ), 2 ) = 0;

4. SET(집합) 연산자에 대해서 설명하세요. 
  ㄱ. U
  ㄴ. U A
  ㄷ. M
  ㄹ. I
  (주의할점) 

5.  insa 테이블에서 모든 사원들을 14명씩 팀을 만드면 총 몇 팀이 나올지를 쿼리로 작성하세요.
 ( 힌트 : 집계(그룹)함수 사용)  
 SELECT  CEIL( COUNT(*)/14 )  "총팀의 수"
 FROM insa;
 
 게시글 수 : 89
 한 페이지 : 10
 총 페이지수 ? 89/10=8.9= 절상   9
 
6. emp 테이블에서 최고 급여자, 최저 급여자 정보 모두 조회
  [실행결과]
empno   ename   job     mgr     hiredate   pay      deptno  etc
7369	SMITH	CLERK	7902	80/12/17	800		    20  최고급여자
7839	KING	PRESIDENT		81/11/17	5000		10  최저급여자

-- ㄱ.
-- 5000
SELECT MAX(sal+NVL(comm,0)) max_pay FROM emp;
-- 800
SELECT MIN(sal+NVL(comm,0)) min_pay FROM emp;
-- 
SELECT *
FROM emp
WHERE sal+NVL(comm,0) IN ( 5000, 800 );
WHERE sal+NVL(comm,0) = (SELECT MAX(sal+NVL(comm,0)) max_pay FROM emp) 
     OR sal+NVL(comm,0) = (SELECT MIN(sal+NVL(comm,0)) min_pay FROM emp);
WHERE sal+NVL(comm,0) IN (
                    (SELECT MAX(sal+NVL(comm,0)) max_pay FROM emp)
                  , (SELECT MIN(sal+NVL(comm,0)) min_pay FROM emp) 
      );     
     sal+NVL(comm,0) =  ()  ; X
WHERE sal+NVL(comm,0) = 5000 OR   sal+NVL(comm,0) =  800  ; X
-- 5000	800
SELECT MAX(sal+NVL(comm,0)) max_pay, MIN(sal+NVL(comm,0)) min_pay FROM emp;
--
SELECT *
FROM emp
-- ORA-00913: too many values
WHERE sal+NVL(comm,0) IN (  SELECT MAX(sal+NVL(comm,0)) max_pay, MIN(sal+NVL(comm,0)) min_pay FROM emp );

-- ㄴ.
SELECT emp.*, '최고 급여자'
FROM emp
WHERE sal+NVL(comm, 0) = (SELECT  MAX( sal+NVL(comm, 0) ) max_pay FROM emp )  -- 5000
UNION ALL
SELECT emp.*, '최저 급여자'
FROM emp
WHERE sal+NVL(comm, 0) = (SELECT  MIN( sal+NVL(comm, 0) ) max_pay FROM emp );

-- ㄷ. SQL 연산자   ALL, ANY, SOME, [NOT] EXISTS
SELECT emp.*, '최고 급여자'
FROM emp
WHERE sal+NVL(comm, 0) >= ALL (SELECT  sal+NVL(comm, 0) FROM emp )  -- 5000
UNION ALL
SELECT emp.*, '최저 급여자'
FROM emp
WHERE sal+NVL(comm, 0) <= ALL (SELECT  sal+NVL(comm, 0) FROM emp );

7.  emp 테이블에서 
   comm 이 400 이하인 사원의 정보 조회
  ( 조건 : comm 이 null 인 사원도 포함 )
 [실행결과]
    ename   sal     comm
     SMITH	800	    null
    ALLEN	1600	300
    WARD	1250	500 
    JONES	2975    null	
    MARTIN	1250	1400
    BLAKE	2850    null	
    CLARK	2450    null	
    KING	5000    null	
    TURNER	1500	0
    JAMES	950	    null
    FORD	3000    null	
    MILLER	1300    null	
    
-- 조건) null 포함
-- ㄹ.  LNNVL() 함수 
--      LNNVL(null) => true
SELECT ename, sal, comm
FROM emp
WHERE  LNNVL(comm >= 400);  -- comm <= 400  OR comm IS NULL;
-- ㄷ. 
SELECT ename, sal, comm
FROM emp
WHERE  NVL(comm,0) <= 400;
-- ㄴ. 
SELECT ename, sal, comm
FROM emp
WHERE comm <= 400  OR comm IS NULL;
-- ㄱ. 
SELECT ename, sal, comm
FROM emp
WHERE comm <= 400
UNION ALL
SELECT ename, sal, comm
FROM emp
WHERE comm IS NULL;    
  
  12:02 수업 시작~~
8. emp 테이블에서 [각 부서별] 급여(pay)를 가장 많이 받는 사원의 정보 출력.    
   ㄱ. Correlated Subquery(상호연관 서브쿼리) 사용해서 풀기 
SELECT MAX(sal+NVL(comm,0)) FROM emp;

SELECT *
FROM emp p
WHERE sal+NVL(comm,0) = ( SELECT MAX(sal+NVL(comm,0)) FROM emp c WHERE deptno = p.deptno ) ;

   ㄴ. SET 연산자 사용해서 풀기
SELECT *
FROM emp
WHERE deptno =10 AND sal+NVL(comm,0) = (SELECT MAX(sal+NVL(comm,0)) FROM emp WHERE deptno = 10)
UNION ALL
SELECT *
FROM emp
WHERE deptno =20 AND sal+NVL(comm,0) = (SELECT MAX(sal+NVL(comm,0)) FROM emp WHERE deptno = 20)
UNION ALL
SELECT *
FROM emp
WHERE deptno =30 AND sal+NVL(comm,0) = (SELECT MAX(sal+NVL(comm,0)) FROM emp WHERE deptno = 30)
UNION ALL
SELECT *
FROM emp
WHERE sal+NVL(comm,0) = (SELECT MAX(sal+NVL(comm,0)) FROM emp WHERE deptno = 40);

9. emp 테이블에서 30번 부서만 PAY를 계산 후 막대그래프를 아래와 같이 그리는 쿼리 작성
   ( 필요한 부분은 결과 분석하세요~    PAY가 100 단위당 # 한개 , 반올림처리 )
[실행결과]
DEPTNO ENAME PAY BAR_LENGTH      
---------- ---------- ---------- ----------
30	BLAKE	2850	29	 #############################
30	MARTIN	2650	27	 ###########################
30	ALLEN	1900	19	 ###################
30	WARD	1750	18	 ##################
30	TURNER	1500	15	 ###############
30	JAMES	950	    10	 ##########

SELECT deptno, ename, sal + NVL(comm, 0)  pay 
    , ROUND(  (sal + NVL(comm, 0))/100 )  bar_length
    , RPAD(' ',  ROUND(  (sal + NVL(comm, 0))/100 )+1  , '#') bar
FROM emp
WHERE deptno = 30
ORDER BY pay DESC;

10. insa 테이블에서 주민등록번호를 123456-1******  형식으로 출력하세요 . 
( LPAD  또는 RPAD 함수 사용해서 풀기  )
[실행결과]
홍길동	770423-1022432	770423-1******
이순신	800423-1544236	800423-1******
이순애	770922-2312547	770922-2******

SELECT name, ssn
--    , SUBSTR( ssn, 1, 8)
      , RPAD( SUBSTR( ssn, 1, 8), 14, '*')
      , SUBSTR( ssn, 1, 8) || '******'
      , CONCAT( SUBSTR( ssn, 1, 8), '******'  )
FROM insa;  

11. 이번 달이  몇일 까지 있는 지 출력하세요.
-- ㄱ.
SELECT LAST_DAY( SYSDATE ) -- 24/02/29
     , TO_CHAR(  LAST_DAY( SYSDATE ), 'YYYY' )
     , TO_CHAR(  LAST_DAY( SYSDATE ), 'MM' )
     , TO_CHAR(  LAST_DAY( SYSDATE ), 'DD' )
FROM dual;
-- ㄴ.
SELECT SYSDATE                --24/02/20
   , ADD_MONTHS(SYSDATE, 1)   --24/03/20
   , TRUNC(ADD_MONTHS(SYSDATE, 1)) -- 시간 분 초 절삭
   , TRUNC(ADD_MONTHS(SYSDATE, 1), 'MONTH') -- 24/03/01
   , TRUNC(ADD_MONTHS(SYSDATE, 1), 'MONTH') - 1
FROM dual;

12. SELECT TRUNC( SYSDATE, 'YEAR' ) --월,일 절삭
      , TRUNC( SYSDATE, 'MONTH' )      -- 일 절삭
      , TRUNC( SYSDATE  )               -- 시간,분,초 절삭
    FROM dual;
    위의 쿼리의 결과를 적으세요 . 
  
13. emp 에서 평균PAY 보다 같거나 큰 사원들만의 급여합을 출력.
[실행결과]
NAME             SAL       COMM        PAY    AVG_PAY
---------- ---------- ---------- ---------- ----------
JONES            2975                  2975 2260.41667
MARTIN           1250       1400       2650 2260.41667
BLAKE            2850                  2850 2260.41667
CLARK            2450                  2450 2260.41667
KING             5000                  5000 2260.41667
FORD             3000                  3000 2260.41667
  ㄱ. with절 사용
WITH e AS(
SELECT ename,sal,comm,sal+NVL(comm,0)pay
        ,(SELECT ROUND( AVG(sal+NVL(comm,0)),5) FROM emp)avg_pay
FROM emp
)
SELECT e.*
FROM e
WHERE e.pay >=e.avg_pay;

SELECT e.*
FROM(SELECT ename,sal,comm,sal+NVL(comm,0)pay
        ,(SELECT ROUND( AVG(sal+NVL(comm,0)),5) FROM emp)avg_pay
FROM emp 
WHERE pay>=e.avg_pay

  ㄴ. inline-view 사용

14. emp 테이블에서 각 부서별 급여를 가장 많이 받는 사원의 pay를 출력 
    [문제] 급여를 많이 받는 사원 TOP -3 조회
    1) INLINE VIEW를 사용
        ㄴ ORDER BY 정렬
     
SELECT ROWNUM , e.*
FROM(
        SELECT empno,ename,hiredate,sal,comm,sal+NVL(comm,0)pay
        FROM emp
        ORDER BY pay
     )e
--WHERE ORWNUM BETWEEN 3 AND 5; 불가 반드시 1등부터 
WHERE ROWNUM <= 5;

    [문제] 급여를 많이 받는 사원 TOP -1 조회
[ㄱ]
SELECT e.* 
FROM(
        SELECT
            RANK()OVER( ORDER BY sal+NVL(comm,0)DESC) "PAY_RANK"
            ,empno,ename,hiredate,sal+NVL(comm,0)pay
        FROM emp
    ) e
WHERE e.pay_rank >10;
WHERE e.pay_rank BETWEEN 3 AND 5;
WHERE e.pay_rank <=5;
WHERE e.pay_rank =1;
--[ㄴ] (시험)  각 부서별 pay 2등까지 출력

SELECT *
FROM(
        SELECT 
            deptno
            ,RANK()OVER( PARTITION BY deptno ORDER BY sal+NVL(comm,0)DESC )  deptno_pay_rank
            ,empno,ename,hiredate,sal+NVL(comm,0)pay
        FROM emp
    )e
WHERE e.deptno_pay_rank<=5;
WHERE e.deptno_pay_rank=1;

15. 다음 주 월요일은 휴강일이다.. 몇 일인가요 ? 

SELECT SYSDATE
        , NEXT_DAY(SYSDATE,'월')
FROM dual;


16. emp 테이블에서
   각 사원들의 입사일자를 기준으로 10년 5개월 20일째 되는 날 ? 
   
   SELECT hiredate
        ,ADD_MONTHS(hiredate,10*12+5)+20
   FROM emp
   
    [실행결과]
        HIREDATE ADD_MONT
        -------- --------
        80/12/17 91/06/06
        81/02/20 91/08/12
        81/02/22 91/08/14
        81/04/02 91/09/22
        81/09/28 92/03/18
        81/05/01 91/10/21
        81/06/09 91/11/29
        81/11/17 92/05/07
        81/09/08 92/02/28
        81/12/03 92/05/23
        81/12/03 92/05/23 
        82/01/23 92/07/12
        
        12개 행이 선택되었습니다. 
  
17. insa 테이블에서
    사원번호(num) 가  1002 인 사원의 주민번호의 월,일만을 오늘날짜로 수정하세요.
--ssn = '80XXXX-1544236
--801007-1544236
UPDATE insa
SET ssn = SUBSTR(ssn,1,2)|| TO_CHAR(SYSDATE,'MMDD')||SUBSTR(ssn,7)
WHERE num= 1002;
COMMIT;

SELECT ssn
    , SUBSTR(ssn,1,2)|| TO_CHAR(SYSDATE,'MMDD')||SUBSTR(ssn,7)
FROM insa
WHERE num = 1002;
                              
SELECT ssn
FROM insa
WHERE num = 1002;
--      0220
SELECT SYSDATE
    ,TO_CHAR(SYSDATE,'YYYY')
    ,TO_CHAR(SYSDATE,'MM')
    ,TO_CHAR(SYSDATE,'DD')
    ,TO_CHAR(SYSDATE,'DY')
FROM dual;
    
                              
17-2.  insa 테이블에서 오늘을 기준으로 생일이 지남 여부를 출력하는 쿼리를 작성하세요 . 
   ( '지났다', '안지났다', '오늘 ' 처리 )                              
   
SELECT name, ssn , SYSDATE
      , SUBSTR( ssn, 3, 4)  ssn_md
      --, TO_DATE( SUBSTR( ssn, 3, 4), 'MMDD')
      --, TO_DATE( SUBSTR( ssn, 3, 4), 'MMDD') - SYSDATE  -- 양수(생일 후), 0 (오늘) 음수(생일 전)
      --, SIGN( TO_DATE( SUBSTR( ssn, 3, 4), 'MMDD') - TRUNC(SYSDATE) ) s
      , REPLACE(REPLACE(REPLACE(SIGN( TO_DATE( SUBSTR( ssn, 3, 4), 'MMDD') - TRUNC(SYSDATE)),-1,'지남'),0,'오늘'),1,'안지남') ㄹ
FROM insa;

   SELECT SUBSTR(ssn,3,4)
        ,TO_CHAR(TRUNC(SYSDATE),'MMDD')
                            
        ,REPLACE(NVL2(NULLIF(SIGN(SUBSTR(ssn,3,4)-TO_CHAR(TRUNC(SYSDATE),'MMDD')),-1),'안지났다','지났다'),0,'오늘')
   FROM insa;
18. emp 테이블의 ename, pay , 최대pay값 5000을 100%로 계산해서
   각 사원의 pay를 백분률로 계산해서 10% 당 별하나(*)로 처리해서 출력
   ( 소숫점 첫 째 자리에서 반올림해서 출력 )

WITH t AS(
SELECT ename,sal+NVL(comm,0) pay
    ,(SELECT SUM(sal+NVL(comm,0)) FROM emp) sum_pay
FROM emp) 
SELECT t.ename,t.pay,t.sum_pay
        ,ROUND(t.pay/t.sum_pay*100,2)||'%' percent
        ,ROUND(t.pay/t.sum_pay*100) cnt
        ,RPAD( ' ',ROUND(t.pay/t.sum_pay*100)+1,'*')
FROM t;

[실행결과]
ename   pay     max_pay 퍼센트  별갯수
SMITH	800	    5000	16%	    2	 **
ALLEN	1900	5000	38%	    4	 ****
WARD	1750	5000	35%	    4	 ****
JONES	2975	5000	59.5%	6	 ******
MARTIN	2650	5000	53%	    5	 *****
BLAKE	2850	5000	57%	    6	 ******
CLARK	2450	5000	49%	    5	 *****
KING	5000	5000	100%	10	 **********
TURNER	1500	5000	30%	    3	 ***
JAMES	950	    5000	19%	    2	 **
FORD	3000	5000	60%	    6	 ******
MILLER	1300	5000	26%	    3	 ***  
  
  
  
  